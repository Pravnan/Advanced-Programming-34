package com.example.demo1.controller;

import com.example.demo1.model.Customer;
import com.example.demo1.service.CustomerService;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import java.io.IOException;
import java.util.List;

@WebServlet("/customer")
public class CustomerController extends HttpServlet {

    private CustomerService customerService;

    @Override
    public void init() throws ServletException {
        customerService = new CustomerService(); // Initialize CustomerService
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        // List all customers
        if ("list".equals(action)) {
            List<Customer> customers = customerService.getAllCustomers();
            System.out.println("Customers fetched: " + customers.size()); // Debugging line
            request.setAttribute("customers", customers); // Pass customers to JSP
            request.getRequestDispatcher("/views/customer-list.jsp").forward(request, response);

        }
        // View a specific customer by ID
        else if ("view".equals(action)) {
            int id = Integer.parseInt(request.getParameter("id"));
            Customer customer = customerService.getCustomerById(id);
            if (customer != null) {
                request.setAttribute("customer", customer); // Pass customer data to JSP
                request.getRequestDispatcher("/views/customer-view.jsp").forward(request, response);
            } else {
                response.sendRedirect("customer?action=list"); // If customer not found, redirect to list
            }

        }
        // Edit a customer by ID
        else if ("edit".equals(action)) {
                int id = Integer.parseInt(request.getParameter("id"));
                Customer customer = customerService.getCustomerById(id);
                if (customer != null) {
                    request.setAttribute("customer", customer); // Pass customer data to JSP for editing
                    request.getRequestDispatcher("/views/customer-edit.jsp").forward(request, response);
                } else {
                    response.sendRedirect("customer?action=list"); // If customer not found, redirect to list
                }
        }
        else if ("add".equals(action)) {
            request.getRequestDispatcher("/views/customer-add.jsp").forward(request, response); // Forward to the add form
        }
        // Default action (list all customers)
        else {
            response.sendRedirect("customer?action=list");
        }


    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        // Add a new customer
        if ("add".equals(action)) {
            Customer customer = createCustomerFromRequest(request);
            customerService.addCustomer(customer); // Add customer to DB
            response.sendRedirect("customer?action=list"); // Redirect to customer list

        }
        // Update an existing customer
        else if ("update".equals(action)) {
            int id = Integer.parseInt(request.getParameter("id"));
            Customer customer = createCustomerFromRequest(request);
            System.out.println(customer);
            customer.setCustomerID(id); // Set the ID for updating
            customerService.updateCustomer(customer); // Update customer in DB
            response.sendRedirect("customer?action=list"); // Redirect to customer list

        }
        // Delete a customer
        else if ("delete".equals(action)) {
            int id = Integer.parseInt(request.getParameter("id"));
            customerService.removeCustomer(id); // Remove customer from DB
            response.sendRedirect("customer?action=list"); // Redirect to customer list
        }
        // Default action (list all customers)
        else {
            response.sendRedirect("customer?action=list");
        }
    }

    // Helper method to create a Customer object from request parameters
    private Customer createCustomerFromRequest(HttpServletRequest request) {
        return new Customer(
                0,  // ID will be auto-generated by the database
                request.getParameter("name"),
                request.getParameter("email"),
                request.getParameter("address"),
                request.getParameter("nic"),
                request.getParameter("phoneNumber"),
                null  // CreatedAt can be set to null if you're handling it in the service layer
        );
    }
}
