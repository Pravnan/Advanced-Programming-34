package com.example.vehiclereservationapp.controller;

import com.example.vehiclereservationapp.model.Driver;
import com.example.vehiclereservationapp.service.DriverService;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import java.io.IOException;
import java.util.List;

@WebServlet("/driver")
public class DriverController extends HttpServlet {

    private DriverService driverService;

    @Override
    public void init() throws ServletException {
        driverService = new DriverService(); // Initialize DriverService
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        switch (action != null ? action : "list") {
            case "list":
                List<Driver> drivers = driverService.getAllDrivers();
                request.setAttribute("drivers", drivers);
                request.getRequestDispatcher("/views/driver-list.jsp").forward(request, response);
                break;

            case "view":
                handleViewDriver(request, response);
                break;

            case "edit":
                handleEditDriver(request, response);
                break;

            case "add":
                request.getRequestDispatcher("/views/driver-add.jsp").forward(request, response);
                break;

            default:
                response.sendRedirect("driver?action=list");
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        String action = request.getParameter("action");

        switch (action != null ? action : "list") {
            case "add":
                Driver newDriver = createDriverFromRequest(request);
                driverService.addDriver(newDriver);
                response.sendRedirect("driver?action=list");
                break;

            case "update":
                int id = Integer.parseInt(request.getParameter("id"));
                Driver updatedDriver = createDriverFromRequest(request);
                updatedDriver.setDriverID(id);
                driverService.updateDriver(updatedDriver);
                response.sendRedirect("driver?action=list");
                break;

            case "delete":
                int deleteId = Integer.parseInt(request.getParameter("id"));
                driverService.removeDriver(deleteId);
                response.sendRedirect("driver?action=list");
                break;

            default:
                response.sendRedirect("driver?action=list");
        }
    }

    private void handleViewDriver(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int id = Integer.parseInt(request.getParameter("id"));
        Driver driver = driverService.getDriverById(id);
        if (driver != null) {
            request.setAttribute("driver", driver);
            request.getRequestDispatcher("/views/driver-view.jsp").forward(request, response);
        } else {
            response.sendRedirect("driver?action=list");
        }
    }

    private void handleEditDriver(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        int id = Integer.parseInt(request.getParameter("id"));
        Driver driver = driverService.getDriverById(id);
        if (driver != null) {
            request.setAttribute("driver", driver);
            request.getRequestDispatcher("/views/driver-edit.jsp").forward(request, response);
        } else {
            response.sendRedirect("driver?action=list");
        }
    }

    private Driver createDriverFromRequest(HttpServletRequest request) {
        return new Driver(
                0, // ID will be auto-generated by the database
                request.getParameter("Name"),
                request.getParameter("LicenseNumber"),
                request.getParameter("PhoneNumber"),
                null, // Assigned car ID (null for now)
                request.getParameter("Status"),
                request.getParameter("Username"),
                request.getParameter("PasswordHash"),
                "DRIVER",
                0, // Failed login attempts
                false, // Email verification status
                false, // Account lock status
                null // Last login timestamp
        );
    }
}
